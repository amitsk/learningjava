/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'archana' at '5/25/14 9:49 PM' with Gradle 1.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.maiflai:gradle-scalatest:0.4'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'scala'
//apply plugin: 'scalatest'



// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jacoco {
    toolVersion = "0.6.2.201302030002"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacocoHtml"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile "org.scala-lang:scala-library:2.10.2"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:1.6.0'
    testCompile 'com.jayway.restassured:rest-assured:2.3.2'
    testCompile 'org.scalatest:scalatest_2.10:2.2.2'
    testRuntime 'org.pegdown:pegdown:1.1.0'

}

test {
    maxParallelForks = 1
    finalizedBy jacocoTestReport
}

test << {
    ant.taskdef(
            name: 'scalatest',
            classname: 'org.scalatest.tools.ScalaTestAntTask',
            classpath: classpath.asPath
    )
    ant.scalatest(
            runpath: testClassesDir,
            haltonfailure: 'true',
            fork: 'false') {
        reporter(type: 'stderr')
        reporter(type: 'html', directory: 'build/reports/scalaTest')
    }
}

